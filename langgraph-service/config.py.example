"""
MailFloww LangGraph Service Configuration
Copy this file to config.py and update with your actual values
"""

import os
import torch

# Logging Configuration
LOG_LEVEL = "INFO"
LOG_FORMAT = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Device Configuration
USE_GPU = True
GPU_MEMORY_FRACTION = 0.8
TORCH_DEVICE = "cuda" if torch.cuda.is_available() and USE_GPU else "cpu"

# Model Configuration
EMBEDDING_MODEL = "BAAI/bge-large-en-v1.5"
EMBEDDING_DIMENSION = 1024

# API Configuration
GROQ_API_KEY = os.getenv("GROQ_API_KEY", "your_groq_api_key_here")

# Vector Database Configuration
CHROMA_PERSIST_DIR = "./chroma_db"
EMAIL_COLLECTION_NAME = "emails"
DOCS_COLLECTION_NAME = "company_documents"

# LangSmith Configuration
LANGCHAIN_TRACING_V2 = os.getenv("LANGCHAIN_TRACING_V2", "true")
LANGCHAIN_ENDPOINT = os.getenv("LANGCHAIN_ENDPOINT", "https://api.smith.langchain.com")
LANGCHAIN_API_KEY = os.getenv("LANGCHAIN_API_KEY", "your_langsmith_api_key_here")
LANGCHAIN_PROJECT = os.getenv("LANGCHAIN_PROJECT", "your_langsmith_project_name")

# FastAPI Configuration
API_HOST = "0.0.0.0"
API_PORT = 8000
API_RELOAD = True

# LangGraph Configuration
DEFAULT_LLM_PROVIDER = os.getenv("DEFAULT_LLM_PROVIDER", "groq")
DEFAULT_MODEL = os.getenv("DEFAULT_MODEL", "llama-3.1-8b-instant")
TEMPERATURE = float(os.getenv("TEMPERATURE", "0.7"))
MAX_TOKENS = int(os.getenv("MAX_TOKENS", "2000"))

# Database Configuration
DATABASE_URL = os.getenv("DATABASE_URL", "postgresql://username:password@localhost:5432/database_name")
REDIS_URL = os.getenv("REDIS_URL", "redis://localhost:6379")

# Workflow Configuration
CRITIQUE_THRESHOLD = 0.75
MAX_ITERATIONS = 3
SIMILARITY_THRESHOLD = 0.7
MAX_CONTEXT_EMAILS = 10
MAX_CONTEXT_DOCUMENTS = 5

# Security Configuration
CORS_ORIGINS = ["http://localhost:3000", "http://127.0.0.1:3000"]
CORS_CREDENTIALS = True
CORS_METHODS = ["*"]
CORS_HEADERS = ["*"]

# Performance Configuration
MAX_WORKERS = 4
TIMEOUT_SECONDS = 120
BATCH_SIZE = 32
CACHE_TTL = 3600

# Email Configuration (for Gmail API integration)
GMAIL_CREDENTIALS_FILE = "path/to/your/gmail_credentials.json"
GMAIL_TOKEN_FILE = "path/to/your/gmail_token.json"
GMAIL_SCOPES = ["https://www.googleapis.com/auth/gmail.readonly"]

# Additional API Configuration
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY", "your_google_api_key_here")

# Email Configuration
DEFAULT_REPLY_STYLE = os.getenv("DEFAULT_REPLY_STYLE", "professional")
MAX_CONVERSATION_HISTORY = int(os.getenv("MAX_CONVERSATION_HISTORY", "10"))

# AWS Configuration
REACT_APP_AWS_REGION = os.getenv("REACT_APP_AWS_REGION", "your-aws-region")
REACT_APP_COGNITO_USER_POOL_ID = os.getenv("REACT_APP_COGNITO_USER_POOL_ID", "your-user-pool-id")
REACT_APP_COGNITO_CLIENT_ID = os.getenv("REACT_APP_COGNITO_CLIENT_ID", "your-client-id")
REACT_APP_COGNITO_CLIENT_SECRET = os.getenv("REACT_APP_COGNITO_CLIENT_SECRET", "your-client-secret")
AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID", "your-aws-access-key-id")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY", "your-aws-secret-access-key")

# Company Configuration
COMPANY_NAME = "Your Company Name"
SUPPORT_EMAIL = "support@yourcompany.com"
SUPPORT_PHONE = "1-800-XXX-XXXX"
COMPANY_WEBSITE = "https://yourcompany.com"

# Monitoring Configuration
ENABLE_METRICS = True
METRICS_PORT = 9090
HEALTH_CHECK_INTERVAL = 30

# Development Configuration
DEBUG_MODE = False
VERBOSE_LOGGING = False
SAVE_INTERMEDIATE_RESULTS = False
